#
#   GENERAL SETTINGS
#

# Enable the crafting of computers
allow-comptuer-crafting: true

# Computer crafting limit for normal players.
# The permissions computer.limit.ignore will override this
computer-limit: 3

# Whether or not to use player heads as new computer items
use-heads: true

# If the use-heads is set to true, this will determine the
# UUID of the head set for new computer items
head-uuid: df045cc0-7ec9-4cbc-8219-2ea32ee0cd84

# If the use-heads is set to true, this will determine the
# encoded texture set for new computer items.
head-texture: "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZWQxZTk5NzkyODlmMDMwOTlhN2M1ODdkNTJkNDg4ZTI2ZTdiYjE3YWI1OTRiNjlmOTI0MzhkNzdlYWJjIn19fQ=="

# Command prefix when sending commands to a computer. You may
# want to change this for BungeeCord servers, as it will
# interrupt commands that may have been designated for a computer.
#
# You may also leave this value blank to allow all text to be
# forwarded to computers.
command-prefix: /

# If set to true, this will hide all 'Computers saving...'
# messages
hide-save-messages: false

# Debug mode. Useful for developers, this option will print
# stack traces for every runtime Lua program crash (showing
# internal stack traces), and various information about computer
# data saving/loading along with other odds and ends.
#
# If you think there is something wrong with a Lua function call
# into Consoles, you can enable this to get the full stack trace.
debug-mode: true

# Enables a debug hook, launching a specified debug command when
# the plugin starts. Only use this command if you need to
# use a debugger to backtrace a JVM crash.
debug-hook: true

# The command to use for the debug hook. You can use the %N
# variable for a 'name' to be generated for the debug session,
# %I for the processes PID, and %E for the path of the native
# loaded library. Arguments are separated by  commas (,) to
# properly pass arguments to the newly spawned process.
#
# By default, this command will start GDB in a seperate
# terminal on Linux, and sets up signal handling for the JVM.
debug-command: "x-terminal-emulator,-e,gdb,-p,%I,-ex,handle SIGSEGV pass noprint nostop,-ex,handle SIGABRT pass print stop,-ex,cont"

#
#   FUNCTION SETTINGS
#

# Custom frame rendering for Lua programs, disable if you do
# not want players to use this.
#
# If you are concerned about players exploiting frame rendering
# to slow down your server or lag out players adjacent to a
# computer, then it is best to disable this.
#
# For the most part, though, this is relatively safe to keep on.
frame-rendering: true

# Size (in kilobytes) of the chunks that wget downloads every
# 300ms. Increasing this value will result in higher download
# speeds.
wget-chunk-size: 6

# This is a hack to disable the spigot watchdog thread. If
# you are debugging the server an need to prevent the
# process from being terminated by the watchdog thread,
# this will disable it.
disable-watchdog: false

#
#   PROGRAM SETTINGS
#
 
# The script interpreter to use. The provided options are:
#
#  - lua: default lua interpreter and environment
#    (default, native)
#
#  - luaj: a lua interpreter that precompiles logic
#    to java bytecode prior to execution (fallback, java)
#
# Depending on the interpreter, security and sandboxing is
# subject to the implementation. For example, interpreters
# that operate on the JVM, rather than through the native
# layer that this plugin uses (LuaN), share the same heap
# that the server runs on, resulting in easily-exploitable
# OutOfMemoryErrors in your server.
#
# Interpreters/VMs that operate through the native layer
# respect the suggested heap size and operate outside of
# the Java heap.
#
# LuaJIT theoretically can be supported through the LuaN
# layer, however in practise there is a problem with
# LuaJIT's garbage collector and allocator needing to
# use pointers that are in the 32-bit address space.
script-engine: lua

# This is the interval (in instructions) in which kill
# interrupts are checked in programs. This applies to
# scripts.
#
# An 'instruction' is abstract, it could represent Java
# bytecode, or an instruction on your platform's architecture
interrupt-check-interval: 200

# Maximum time (in miliseconds) that a program can run without
# calling a blocking function You can tweak this to be lower
# if you want to avoid program threads from using too server
# resources.
max-time-without-interrupt: 7000

# Suggested heap size for each individual script (in kilobytes)
#
# This currently does not work for LuaJ (JVM-based), engine,
# will govern the allocator for the Lua and LuaJIT backends.
#
# The default value is set very low for sandboxing reasons. If
# you have only a few players using computers, you can increase
# this value.
script-heap-size: 16384
